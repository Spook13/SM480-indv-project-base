[{"/Users/grant/SM480-indv-project-base/src/index.js":"1","/Users/grant/SM480-indv-project-base/src/reportWebVitals.js":"2","/Users/grant/SM480-indv-project-base/src/App.js":"3","/Users/grant/SM480-indv-project-base/src/js/components/LoginForm.jsx":"4","/Users/grant/SM480-indv-project-base/src/js/components/ConnectPopUp.jsx":"5","/Users/grant/SM480-indv-project-base/src/js/components/Button.jsx":"6","/Users/grant/SM480-indv-project-base/src/js/components/Input.jsx":"7","/Users/grant/SM480-indv-project-base/src/js/components/Card.jsx":"8","/Users/grant/SM480-indv-project-base/src/js/components/Icon.jsx":"9"},{"size":499,"mtime":1612976695342,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612972797296,"results":"12","hashOfConfig":"11"},{"size":1545,"mtime":1616596111265,"results":"13","hashOfConfig":"11"},{"size":3318,"mtime":1616596059195,"results":"14","hashOfConfig":"11"},{"size":1498,"mtime":1616592211091,"results":"15","hashOfConfig":"11"},{"size":939,"mtime":1614784915569,"results":"16","hashOfConfig":"11"},{"size":1228,"mtime":1615390447567,"results":"17","hashOfConfig":"11"},{"size":174,"mtime":1614178939846,"results":"18","hashOfConfig":"11"},{"size":9105,"mtime":1616009902323,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15w6m8o",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/grant/SM480-indv-project-base/src/index.js",[],["43","44"],"/Users/grant/SM480-indv-project-base/src/reportWebVitals.js",[],"/Users/grant/SM480-indv-project-base/src/App.js",["45"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport LoginForm from \"./js/components/LoginForm\";\n\nfunction App(props) {\n    const [isLoggedIn, setIsLoggedIn] = useState(true);\n\n    return (\n        <div className='App'>\n            {isLoggedIn ?\n                <BrowserRouter basename={\"\"}>\n                    <Switch>\n                        <Route path=\"/page-address\">\n                            <div>\n                                <h1>New Page</h1>\n                                <h3>This page uses React Router.</h3>\n                                <p>Copy this Route and update the \"path\" to the desired relative URL</p>\n                                <Link to={\"/\"}>LINK TO HOME PAGE</Link>\n                            </div>\n                        </Route>\n                        <Route path=\"/\">\n                            <div>\n                                <Link to={\"/page-address\"}>LINK TO ANOTHER PAGE</Link>\n                                <h1>HOME PAGE</h1>\n                                <h3>This page uses React Router.</h3>\n                                <p>This entire code block should be replaced by a React Component.</p>\n                            </div>\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            :\n                // Route to Login first\n                <LoginForm onLogin={() => setIsLoggedIn(true)}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","/Users/grant/SM480-indv-project-base/src/js/components/LoginForm.jsx",["46","47","48","49","50","51","52"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport OAuth2Login from 'react-simple-oauth2-login';\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport ConnectPopUp from \"./ConnectPopUp\";\nimport { getAllByPlaceholderText } from \"@testing-library/react\";\n\nfunction LoginForm(props) {\n    // varibles for popups\n    const [showPopup, setShowPopup] = useState(false);\n    const [popupName, setNamePopup] = useState(\"\");\n\n    const [showPass, setShowPass] = useState(false);\n\n    const onContinueClick = () => {\n        setShowPass(true);\n    }\n\n    const onButtonClick = (popupId) => {\n        console.log(popupId);\n        switch(popupId) {\n            case \"apple\":\n                setShowPopup(true);\n                setNamePopup(\"Login with Apple\");\n                return;\n            default:\n                setShowPopup(true);\n                // changes the service name\n                setNamePopup(`Login with ${popupId}`);\n        }\n\n    }\n\n    const handleLogin = () => {\n        props.onLogin();\n    }\n\n    if (!showPass) {\n        return (\n          <div className=\"login-form\">\n              <ConnectPopUp\n                  show={showPopup}\n                  serviceName={ popupName }\n                  hidePopUp={() => setShowPopup(false)}\n                  onClose={() => setShowPopup(false)}\n              />\n            <Card>\n              <Input label=\"Email\" placeholder=\"your@email.com\" />\n              <p>Can't log in?<a href=\"#\">Recover Account</a></p>\n              <Button buttontype='primary' full onClick={onContinueClick}>\n                Continue\n              </Button>\n              <p>Or log in with</p>\n              <Button buttontype='secondary' icon='google' full onClick={() => onButtonClick(\"Google\")}>\n                Continue with Google\n              </Button>\n              <Button buttontype='secondary' icon='twitter' full onClick={() => onButtonClick(\"Twitter\")}>\n                Continue with Twitter\n              </Button>\n              <Button buttontype='secondary' icon='facebook' full onClick={() => onButtonClick(\"Facebook\")}>\n                Continue with Facebook\n              </Button>\n              <Button id=\"apple\" buttontype='secondary' icon='apple' full onClick={onButtonClick}>\n                Continue with Apple\n              </Button>\n              <Button buttontype='secondary' icon='pinterest' full onClick={() => onButtonClick(\"Pinterest\")}>\n                Continue with Pinterest\n              </Button>\n              <p>Don't have an account?<a href=\"#\">Sign up</a></p>\n            </Card>\n          </div>\n        );\n    }\n\n    return (\n        <div className=\"login-form\">\n          <Card>\n            <Button buttontype='secondary' icon='arrow-left'/>\n            <Input label=\"Password\" placeholder=\" \" />\n            <p>Forgot password?<a href=\"#\">Recover password</a></p>\n            <Button buttontype='primary' full onClick={handleLogin}>\n              Submit\n            </Button>\n          </Card>\n        </div>\n    )\n}\n\n\nLoginForm.propTypes = {\n    loginBtnText: PropTypes.string.isRequired,\n    onLogin: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","/Users/grant/SM480-indv-project-base/src/js/components/ConnectPopUp.jsx",["53","54","55"],"import React from 'react';\nimport PropTypes from \"prop-types\";\nimport ReactDOM from 'react-dom';\nimport \"./ConnectPopUp.scss\";\n\nfunction ConnectPopUp(props) {\n\n    // Decides if the popup should show or not\n    if(!props.show) {\n        return null;\n    }\n\n    return (\n        <div className=\"pop-up\">\n            \n            {/* Popup header */}\n            <h1 className=\"pop-up-header\"> Connect account? {props.name}</h1>\n\n            {/* Popup  paragraph */}\n            <p className=\"pop-up-para\">You have previously logged in with your email. Would you like to connect your {props.serviceName} account to your App account?</p>\n\n            {/* Popup Buttons */}\n            <div className=\"pop-up-button\">\n\n                {/* No button */}\n                <button className=\"no-button\">\n                    <a href=\"#\" onClick={props.hidePopUp}>\n                        No, thanks\n                    </a>\n                </button>\n\n                {/* Connect button */}\n                <button className=\"connect-button\">\n                    <a href=\"#\" onClick={props.hidePopUp}>\n                        Connect\n                    </a>\n                </button>\n            </div>\n        </div>\n    )\n}\n\nConnectPopUp.propTypes = {\n    // profile name\n    name: PropTypes.string.isRequired,\n    // product name i.e. google, twitter, ect\n    serviceName: PropTypes.string,\n    show: PropTypes.bool,\n    // for hiding pop up\n    hidePopUp: PropTypes.func,\n}\n\nexport default ConnectPopUp;","/Users/grant/SM480-indv-project-base/src/js/components/Button.jsx",["56","57","58"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactDOM from \"react-dom\";\nimport \"./Button.scss\";\nimport classnames from \"classnames\";\nimport Icon from \"./Icon\";\n\nfunction Button(props) {\n\n  const handleClick = (e) => {\n    console.log(\"Button -- handleClick: \", e);\n    if(props.onClick) {\n      props.onClick(props.id);\n    }\n  }\n\n  return (\n    <button\n      className={classnames(\n        \"button\",\n        props.buttontype,\n        { [\"half\"]: props.half },\n        { [\"full\"]: props.full }\n      )}\n      onClick={handleClick}\n    >\n      {props.icon && <Icon type={props.icon} />}\n      {props.children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  id: PropTypes.string,\n  buttontype: PropTypes.oneOf([\"primary\", \"secondary\"]),\n  icon: PropTypes.string,\n  half: PropTypes.bool,\n  full: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  buttontype: \"primary\",\n};\n\nexport default Button;\n","/Users/grant/SM480-indv-project-base/src/js/components/Input.jsx",[],"/Users/grant/SM480-indv-project-base/src/js/components/Card.jsx",[],"/Users/grant/SM480-indv-project-base/src/js/components/Icon.jsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"67","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":19},{"ruleId":"63","severity":1,"message":"69","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":11,"column":10,"nodeType":"65","messageId":"66","endLine":11,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":54,"column":31,"nodeType":"73","endLine":54,"endColumn":43},{"ruleId":"71","severity":1,"message":"72","line":74,"column":40,"nodeType":"73","endLine":74,"endColumn":52},{"ruleId":"71","severity":1,"message":"72","line":85,"column":32,"nodeType":"73","endLine":85,"endColumn":44},{"ruleId":"63","severity":1,"message":"67","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":27,"column":21,"nodeType":"73","endLine":27,"endColumn":59},{"ruleId":"71","severity":1,"message":"72","line":34,"column":21,"nodeType":"73","endLine":34,"endColumn":59},{"ruleId":"63","severity":1,"message":"67","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":22,"column":11,"nodeType":"76","messageId":"77","endLine":22,"endColumn":31,"fix":"78"},{"ruleId":"74","severity":1,"message":"79","line":23,"column":11,"nodeType":"76","messageId":"77","endLine":23,"endColumn":31,"fix":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'OAuth2Login' is defined but never used.","'classnames' is defined but never used.","'getAllByPlaceholderText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-computed-key","Unnecessarily computed property [\"half\"] found.","Property","unnecessarilyComputedProperty",{"range":"83","text":"84"},"Unnecessarily computed property [\"full\"] found.",{"range":"85","text":"86"},"no-global-assign","no-unsafe-negation",[462,470],"\"half\"",[496,504],"\"full\""]